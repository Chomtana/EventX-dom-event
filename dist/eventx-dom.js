/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/dom.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/eventx-core/lib/jquery.js":
/*!************************************************!*\
  !*** ./node_modules/eventx-core/lib/jquery.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _main = __webpack_require__(/*! ./main.js */ \"./node_modules/eventx-core/lib/main.js\");\n\nif (typeof JQuery !== 'undefined') $ = jQuery;\n\nvar $on, $off;\n\nif (typeof $ !== 'undefined') {\n    $on = $.prototype.on;\n    $off = $.prototype.off;\n\n    $.prototype.on = function (event, selector, data, handler) {\n        var _this = this;\n\n        //backup old variable\n        var $event = event;\n        var $selector = selector;\n        var $data = data;\n        var $handler = handler;\n\n        //Rearrange order of arguments to correct order\n        if (selector && typeof selector === \"function\") {\n            handler = selector;\n            selector = null;\n            data = null;\n        }\n        if (data && typeof data === \"function\") {\n            handler = data;\n            data = null;\n        }\n        if (selector && typeof selector !== \"string\") {\n            data = selector;\n            selector = null;\n        }\n\n        //event special case\n        if ($.isPlainObject(event)) {\n            $.each(events, function (e, h) {\n                $.prototype.on.call(_this, e, selector, data, h);\n            });\n            return;\n        } else if (typeof event === \"string\") {\n            var events = event.split(\" \");\n            if (events.length > 1) {\n                //console.log(event,selector,data,handler);\n                $.each(events, function (i, e) {\n                    $.prototype.on.call(_this, e, selector, data, handler);\n                });\n                return;\n            }\n        }\n\n        //console.log(event,selector,data,handler);\n\n        if (data) {\n            var oldhandler = handler;\n            handler = function handler(e) {\n                if (!e.data) e.data = data;\n                oldhandler(e);\n            };\n        }\n\n        if (this.length > 0 && this[0] != window /* && this[0]!=document*/) {\n                //special case\n                (0, _main.on)(selector ? this.find(selector) : this, event, handler);\n            }\n\n        $on.call(this, $event, $selector, $data, $handler);\n    };\n\n    $.prototype.off = function (event, selector, handler) {\n        var _this2 = this;\n\n        //backup old variable\n        var $event = event;\n        var $selector = selector;\n        var $handler = handler;\n\n        //Rearrange order of arguments to correct order\n        if (selector && typeof selector === \"function\") {\n            handler = selector;\n            selector = null;\n        }\n\n        //event special case\n        if (!event) {\n            (0, _main.off)(selector ? this.find(selector) : this, event, handler);\n            $off.call(this, $event, $selector, $handler);\n            return;\n        }\n\n        if ($.isPlainObject(event)) {\n            $.each(events, function (e, h) {\n                $.prototype.off.call(_this2, e, selector, h);\n            });\n            return;\n        } else if (typeof event === \"string\") {\n            var events = event.split(\" \");\n            if (events.length > 1) {\n                //console.log(event,selector,data,handler);\n                $.each(events, function (i, e) {\n                    $.prototype.off.call(_this2, e, selector, handler);\n                });\n                return;\n            }\n        }\n\n        if (this.length > 0 && this[0] != window /* && this[0]!=document*/) {\n                //special case\n                (0, _main.off)(selector ? this.find(selector) : this, event, handler);\n            }\n\n        $off.call(this, $event, $selector, $handler);\n    };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZXZlbnR4LWNvcmUvbGliL2pxdWVyeS5qcz8xZmEzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ldmVudHgtY29yZS9saWIvanF1ZXJ5LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX21haW4gPSByZXF1aXJlKCcuL21haW4uanMnKTtcblxuaWYgKHR5cGVvZiBKUXVlcnkgIT09ICd1bmRlZmluZWQnKSAkID0galF1ZXJ5O1xuXG52YXIgJG9uLCAkb2ZmO1xuXG5pZiAodHlwZW9mICQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgJG9uID0gJC5wcm90b3R5cGUub247XG4gICAgJG9mZiA9ICQucHJvdG90eXBlLm9mZjtcblxuICAgICQucHJvdG90eXBlLm9uID0gZnVuY3Rpb24gKGV2ZW50LCBzZWxlY3RvciwgZGF0YSwgaGFuZGxlcikge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICAgIC8vYmFja3VwIG9sZCB2YXJpYWJsZVxuICAgICAgICB2YXIgJGV2ZW50ID0gZXZlbnQ7XG4gICAgICAgIHZhciAkc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgICAgICAgdmFyICRkYXRhID0gZGF0YTtcbiAgICAgICAgdmFyICRoYW5kbGVyID0gaGFuZGxlcjtcblxuICAgICAgICAvL1JlYXJyYW5nZSBvcmRlciBvZiBhcmd1bWVudHMgdG8gY29ycmVjdCBvcmRlclxuICAgICAgICBpZiAoc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGhhbmRsZXIgPSBzZWxlY3RvcjtcbiAgICAgICAgICAgIHNlbGVjdG9yID0gbnVsbDtcbiAgICAgICAgICAgIGRhdGEgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkYXRhICYmIHR5cGVvZiBkYXRhID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGhhbmRsZXIgPSBkYXRhO1xuICAgICAgICAgICAgZGF0YSA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNlbGVjdG9yICYmIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgZGF0YSA9IHNlbGVjdG9yO1xuICAgICAgICAgICAgc2VsZWN0b3IgPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9ldmVudCBzcGVjaWFsIGNhc2VcbiAgICAgICAgaWYgKCQuaXNQbGFpbk9iamVjdChldmVudCkpIHtcbiAgICAgICAgICAgICQuZWFjaChldmVudHMsIGZ1bmN0aW9uIChlLCBoKSB7XG4gICAgICAgICAgICAgICAgJC5wcm90b3R5cGUub24uY2FsbChfdGhpcywgZSwgc2VsZWN0b3IsIGRhdGEsIGgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIGV2ZW50ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB2YXIgZXZlbnRzID0gZXZlbnQuc3BsaXQoXCIgXCIpO1xuICAgICAgICAgICAgaWYgKGV2ZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhldmVudCxzZWxlY3RvcixkYXRhLGhhbmRsZXIpO1xuICAgICAgICAgICAgICAgICQuZWFjaChldmVudHMsIGZ1bmN0aW9uIChpLCBlKSB7XG4gICAgICAgICAgICAgICAgICAgICQucHJvdG90eXBlLm9uLmNhbGwoX3RoaXMsIGUsIHNlbGVjdG9yLCBkYXRhLCBoYW5kbGVyKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvL2NvbnNvbGUubG9nKGV2ZW50LHNlbGVjdG9yLGRhdGEsaGFuZGxlcik7XG5cbiAgICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgICAgIHZhciBvbGRoYW5kbGVyID0gaGFuZGxlcjtcbiAgICAgICAgICAgIGhhbmRsZXIgPSBmdW5jdGlvbiBoYW5kbGVyKGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWUuZGF0YSkgZS5kYXRhID0gZGF0YTtcbiAgICAgICAgICAgICAgICBvbGRoYW5kbGVyKGUpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmxlbmd0aCA+IDAgJiYgdGhpc1swXSAhPSB3aW5kb3cgLyogJiYgdGhpc1swXSE9ZG9jdW1lbnQqLykge1xuICAgICAgICAgICAgICAgIC8vc3BlY2lhbCBjYXNlXG4gICAgICAgICAgICAgICAgKDAsIF9tYWluLm9uKShzZWxlY3RvciA/IHRoaXMuZmluZChzZWxlY3RvcikgOiB0aGlzLCBldmVudCwgaGFuZGxlcik7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgJG9uLmNhbGwodGhpcywgJGV2ZW50LCAkc2VsZWN0b3IsICRkYXRhLCAkaGFuZGxlcik7XG4gICAgfTtcblxuICAgICQucHJvdG90eXBlLm9mZiA9IGZ1bmN0aW9uIChldmVudCwgc2VsZWN0b3IsIGhhbmRsZXIpIHtcbiAgICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgICAgLy9iYWNrdXAgb2xkIHZhcmlhYmxlXG4gICAgICAgIHZhciAkZXZlbnQgPSBldmVudDtcbiAgICAgICAgdmFyICRzZWxlY3RvciA9IHNlbGVjdG9yO1xuICAgICAgICB2YXIgJGhhbmRsZXIgPSBoYW5kbGVyO1xuXG4gICAgICAgIC8vUmVhcnJhbmdlIG9yZGVyIG9mIGFyZ3VtZW50cyB0byBjb3JyZWN0IG9yZGVyXG4gICAgICAgIGlmIChzZWxlY3RvciAmJiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgaGFuZGxlciA9IHNlbGVjdG9yO1xuICAgICAgICAgICAgc2VsZWN0b3IgPSBudWxsO1xuICAgICAgICB9XG5cbiAgICAgICAgLy9ldmVudCBzcGVjaWFsIGNhc2VcbiAgICAgICAgaWYgKCFldmVudCkge1xuICAgICAgICAgICAgKDAsIF9tYWluLm9mZikoc2VsZWN0b3IgPyB0aGlzLmZpbmQoc2VsZWN0b3IpIDogdGhpcywgZXZlbnQsIGhhbmRsZXIpO1xuICAgICAgICAgICAgJG9mZi5jYWxsKHRoaXMsICRldmVudCwgJHNlbGVjdG9yLCAkaGFuZGxlcik7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoJC5pc1BsYWluT2JqZWN0KGV2ZW50KSkge1xuICAgICAgICAgICAgJC5lYWNoKGV2ZW50cywgZnVuY3Rpb24gKGUsIGgpIHtcbiAgICAgICAgICAgICAgICAkLnByb3RvdHlwZS5vZmYuY2FsbChfdGhpczIsIGUsIHNlbGVjdG9yLCBoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiBldmVudCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdmFyIGV2ZW50cyA9IGV2ZW50LnNwbGl0KFwiIFwiKTtcbiAgICAgICAgICAgIGlmIChldmVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coZXZlbnQsc2VsZWN0b3IsZGF0YSxoYW5kbGVyKTtcbiAgICAgICAgICAgICAgICAkLmVhY2goZXZlbnRzLCBmdW5jdGlvbiAoaSwgZSkge1xuICAgICAgICAgICAgICAgICAgICAkLnByb3RvdHlwZS5vZmYuY2FsbChfdGhpczIsIGUsIHNlbGVjdG9yLCBoYW5kbGVyKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5sZW5ndGggPiAwICYmIHRoaXNbMF0gIT0gd2luZG93IC8qICYmIHRoaXNbMF0hPWRvY3VtZW50Ki8pIHtcbiAgICAgICAgICAgICAgICAvL3NwZWNpYWwgY2FzZVxuICAgICAgICAgICAgICAgICgwLCBfbWFpbi5vZmYpKHNlbGVjdG9yID8gdGhpcy5maW5kKHNlbGVjdG9yKSA6IHRoaXMsIGV2ZW50LCBoYW5kbGVyKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAkb2ZmLmNhbGwodGhpcywgJGV2ZW50LCAkc2VsZWN0b3IsICRoYW5kbGVyKTtcbiAgICB9O1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/eventx-core/lib/jquery.js\n");

/***/ }),

/***/ "./node_modules/eventx-core/lib/main.js":
/*!**********************************************!*\
  !*** ./node_modules/eventx-core/lib/main.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.createEvent = createEvent;\nexports.removeEvent = removeEvent;\nexports.renameEvent = renameEvent;\nexports.createVarEvent = createVarEvent;\nexports.renameVarEvent = renameVarEvent;\nexports.removeVarEvent = removeVarEvent;\nexports.on = on;\nexports.off = off;\n//import $ from 'jquery';\n\nif (typeof JQuery !== 'undefined') $ = jQuery;\n\nvar events = {};\nvar varevents = {};\nvar unbinds = exports.unbinds = {};\nvar setting = exports.setting = {}\n/*    resizeObserverFirstRun : true,\r\n    cssObserveEqualChange : false*/\n\n\n/**\r\n * Create driver for a single event (If add to exisitng event type it will stack)\r\n * @param {string} name name of event\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that takes target element (native HTMLElement) and callback and return unbind function (no argument) that unbind event that has been binded using bind function\r\n */\n;function createEvent(name, bind) {\n    if (!events[name]) events[name] = [];\n    events[name].push(bind);\n}\n\n/**\r\n * Remove event driver created by createEvent function only (This function don't unbind events that has already binded)\r\n * @param {string} name name of event\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that was used to pass into createEvent function (optional)\r\n */\nfunction removeEvent(name, bind) {\n    if (events[name]) {\n        if (!bind) {\n            events[name] = null;\n        } else {\n            for (var i = 0; i < events[name].length; i++) {\n                if (events[name][i] == bind) {\n                    events[name].splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction renameEvent(name, newname) {\n    events[newname] = events[name];\n    events[name] = null;\n}\n\n/**\r\n * Create driver for events that start with \"<prefix>:\" (If add to exisitng event type it will stack)\r\n * @param {string} prefix prefix of event (Ex: prefix=csschange will match \"csschange:...\" event)\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that takes target element (native HTMLElement) and callback and return unbind function (no argument) that unbind event that has been binded using bind function\r\n */\nfunction createVarEvent(prefix, bind) {\n    if (!varevents[prefix]) varevents[prefix] = [];\n    varevents[prefix].push(bind);\n}\n\nfunction renameVarEvent(name, newname) {\n    varevents[newname] = varevents[name];\n    varevents[name] = null;\n}\n\n/**\r\n * Remove event driver created by createVarEvent function only (This function don't unbind events that has already binded)\r\n * @param {string} prefix prefix of event\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that was used to pass into createEvent function (optional)\r\n */\nfunction removeVarEvent(prefix, bind) {\n    if (varevents[prefix]) {\n        if (!bind) {\n            varevents[prefix] = null;\n        } else {\n            for (var i = 0; i < varevents[prefix].length; i++) {\n                if (varevents[prefix][i] == bind) {\n                    varevents[prefix].splice(i, 1);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction on_single(target, name, callback) {\n    if (!(target instanceof HTMLElement)) throw \"target must be an instance of HTMLElement or JQuery\";\n    if (events[name]) {\n        events[name].forEach(function (event) {\n            if (!target.unbinds) target.unbinds = {};\n            if (!target.unbinds[name]) target.unbinds[name] = {};\n            if (!target.unbinds[name][callback]) target.unbinds[name][callback] = [];\n            target.unbinds[name][callback].push(event(target, callback.bind(target)));\n        });\n    }\n}\n\nfunction on_single_var(target, name, args, callback) {\n    if (varevents[name]) {\n        varevents[name].forEach(function (event) {\n            if (!target.varunbinds) target.varunbinds = {};\n            if (!target.varunbinds[name]) target.varunbinds[name] = {};\n            if (!target.varunbinds[name][args]) target.varunbinds[name][args] = {};\n            if (!target.varunbinds[name][args][callback]) target.varunbinds[name][args][callback] = [];\n            target.varunbinds[name][args][callback].push(event(target, args, callback.bind(target)));\n        });\n    }\n}\n\nfunction on(target, name, callback) {\n    var part = name.split(\":\");\n    if (typeof $ !== 'undefined') {\n        $(target).each(function (index, ele) {\n            on_single(ele, name, callback);\n        });\n    } else {\n        on_single(target, name, callback);\n    }\n\n    //Variable event\n    if (part.length > 1) {\n        var firstpart = part[0];\n        part.shift();\n\n        if (typeof $ !== 'undefined') {\n            $(target).each(function (index, ele) {\n                on_single_var(ele, firstpart, part, callback);\n            });\n        } else {\n            on_single_var(target, firstpart, part, callback);\n        }\n    }\n}\n\nfunction off_single(target, name, callback) {\n    if (!name) {\n        if (target.unbinds) {\n            for (var unbind_ in target.unbinds) {\n                off_single(target, unbind_);\n            }\n            target.unbinds = null;\n        }\n        return;\n    }\n    if (!callback) {\n        if (target.unbinds && target.unbinds[name]) {\n            for (var unbind_ in target.unbinds[name]) {\n                off_single(target, name, unbind_);\n            }\n            target.unbinds[name] = null;\n        }\n        return;\n    }\n    if (target.unbinds && target.unbinds[name] && target.unbinds[name][callback]) {\n        target.unbinds[name][callback].forEach(function (unbind) {\n            unbind();\n        });\n        target.unbinds[name][callback] = null;\n    }\n}\n\nfunction off_single_var(target, name, args, callback) {\n    if (!name) {\n        if (target.varunbinds) {\n            for (var unbind_ in target.varunbinds) {\n                off_single_var(target, unbind_);\n            }\n            target.varunbinds = null;\n        }\n        return;\n    }\n    if (!args) {\n        if (target.varunbinds && target.varunbinds[name]) {\n            for (var unbind_ in target.varunbinds[name]) {\n                off_single_var(target, name, unbind_);\n            }\n            target.varunbinds[name] = null;\n        }\n        return;\n    }\n    if (!callback) {\n        if (target.varunbinds && target.varunbinds[name] && target.varunbinds[name][args]) {\n            for (var unbind_ in target.varunbinds[name][args]) {\n                off_single_var(target, name, args, unbind_);\n            }\n            target.varunbinds[name][args] = null;\n        }\n        return;\n    }\n    if (target.varunbinds && target.varunbinds[name] && target.varunbinds[name][args] && target.varunbinds[name][args][callback]) {\n        target.varunbinds[name][args][callback].forEach(function (unbind) {\n            unbind();\n        });\n        target.varunbinds[name][args][callback] = null;\n    }\n}\n\nfunction off(target, name, callback) {\n    var part = name.split(\":\");\n\n    if (typeof $ !== 'undefined') {\n        $(target).each(function (index, ele) {\n            off_single(ele, name, callback);\n        });\n    } else {\n        off_single(target, name, callback);\n    }\n\n    //Variable event\n    if (part.length > 1) {\n        var firstpart = part[0];\n        part.shift();\n\n        if (typeof $ !== 'undefined') {\n            $(target).each(function (index, ele) {\n                off_single_var(ele, firstpart, part, callback);\n            });\n        } else {\n            off_single_var(target, firstpart, part, callback);\n        }\n    }\n}\n\nexports.default = {\n    createEvent: createEvent,\n    createVarEvent: createVarEvent,\n    removeEvent: removeEvent,\n    removeVarEvent: removeVarEvent,\n    renameEvent: renameEvent,\n    renameVarEvent: renameVarEvent,\n    on: on,\n    off: off,\n    setting: setting,\n    unbinds: unbinds\n};\n\n\n__webpack_require__(/*! ./jquery.js */ \"./node_modules/eventx-core/lib/jquery.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/eventx-core/lib/main.js\n");

/***/ }),

/***/ "./src/dom.js":
/*!********************!*\
  !*** ./src/dom.js ***!
  \********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _eventxCore = _interopRequireDefault(__webpack_require__(/*! eventx-core */ \"./node_modules/eventx-core/lib/main.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (typeof window !== \"undefined\" && !window.evx) window.evx = _eventxCore.default;\n\nfunction kebab(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\n_eventxCore.default.createEvent(\"attrchange\", function (target, callback) {\n  var config = {\n    attributes: true,\n    attributeOldValue: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = mutationsList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var mutation = _step.value;\n        callback(mutation);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createVarEvent(\"attrchange\", function (target, args, callback) {\n  var config = {\n    attributes: true,\n    attributeOldValue: true,\n    attributeFilter: [args[0]]\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = mutationsList[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var mutation = _step2.value;\n        if (mutation.target == target) callback(mutation);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createEvent(\"childnodeadded\", function (target, callback) {\n  var config = {\n    childList: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n      for (var _iterator3 = mutationsList[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n        var mutation = _step3.value;\n\n        if (mutation.target == target && mutation.addedNodes.length > 0) {\n          mutation.addedNodes.forEach(function (node) {\n            if (node.constructor.name != \"Text\") {\n              mutation.addedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError3 = true;\n      _iteratorError3 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n          _iterator3.return();\n        }\n      } finally {\n        if (_didIteratorError3) {\n          throw _iteratorError3;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createVarEvent(\"childnodeadded\", function (target, args, callback) {\n  var config = {\n    childList: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n      for (var _iterator4 = mutationsList[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n        var mutation = _step4.value;\n\n        if (mutation.target == target && mutation.addedNodes.length > 0) {\n          mutation.addedNodes.forEach(function (node) {\n            if (node.nodeName.toUpperCase() == args[0].toUpperCase()) {\n              mutation.addedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError4 = true;\n      _iteratorError4 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n          _iterator4.return();\n        }\n      } finally {\n        if (_didIteratorError4) {\n          throw _iteratorError4;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createEvent(\"childnodeadded_deep\", function (target, callback) {\n  var config = {\n    childList: true,\n    subtree: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion5 = true;\n    var _didIteratorError5 = false;\n    var _iteratorError5 = undefined;\n\n    try {\n      for (var _iterator5 = mutationsList[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n        var mutation = _step5.value;\n\n        if (mutation.target == target && mutation.addedNodes.length > 0) {\n          mutation.addedNodes.forEach(function (node) {\n            if (node.constructor.name != \"Text\") {\n              mutation.addedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError5 = true;\n      _iteratorError5 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n          _iterator5.return();\n        }\n      } finally {\n        if (_didIteratorError5) {\n          throw _iteratorError5;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createVarEvent(\"childnodeadded_deep\", function (target, args, callback) {\n  var config = {\n    childList: true,\n    subtree: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion6 = true;\n    var _didIteratorError6 = false;\n    var _iteratorError6 = undefined;\n\n    try {\n      for (var _iterator6 = mutationsList[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n        var mutation = _step6.value;\n\n        if (mutation.target == target && mutation.addedNodes.length > 0) {\n          mutation.addedNodes.forEach(function (node) {\n            if (node.nodeName.toUpperCase() == args[0].toUpperCase()) {\n              mutation.addedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError6 = true;\n      _iteratorError6 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion6 && _iterator6.return != null) {\n          _iterator6.return();\n        }\n      } finally {\n        if (_didIteratorError6) {\n          throw _iteratorError6;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createEvent(\"childnoderemoved\", function (target, callback) {\n  var config = {\n    childList: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion7 = true;\n    var _didIteratorError7 = false;\n    var _iteratorError7 = undefined;\n\n    try {\n      for (var _iterator7 = mutationsList[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n        var mutation = _step7.value;\n\n        if (mutation.target == target && mutation.removedNodes.length > 0) {\n          mutation.removedNodes.forEach(function (node) {\n            if (node.constructor.name != \"Text\") {\n              mutation.removedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError7 = true;\n      _iteratorError7 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion7 && _iterator7.return != null) {\n          _iterator7.return();\n        }\n      } finally {\n        if (_didIteratorError7) {\n          throw _iteratorError7;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createVarEvent(\"childnoderemoved\", function (target, args, callback) {\n  var config = {\n    childList: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion8 = true;\n    var _didIteratorError8 = false;\n    var _iteratorError8 = undefined;\n\n    try {\n      for (var _iterator8 = mutationsList[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n        var mutation = _step8.value;\n\n        if (mutation.target == target && mutation.removedNodes.length > 0) {\n          mutation.removedNodes.forEach(function (node) {\n            if (node.nodeName.toUpperCase() == args[0].toUpperCase()) {\n              mutation.removedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError8 = true;\n      _iteratorError8 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion8 && _iterator8.return != null) {\n          _iterator8.return();\n        }\n      } finally {\n        if (_didIteratorError8) {\n          throw _iteratorError8;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createEvent(\"childnoderemoved_deep\", function (target, callback) {\n  var config = {\n    childList: true,\n    subtree: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion9 = true;\n    var _didIteratorError9 = false;\n    var _iteratorError9 = undefined;\n\n    try {\n      for (var _iterator9 = mutationsList[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n        var mutation = _step9.value;\n\n        if (mutation.target == target && mutation.removedNodes.length > 0) {\n          mutation.removedNodes.forEach(function (node) {\n            if (node.constructor.name != \"Text\") {\n              mutation.removedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError9 = true;\n      _iteratorError9 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion9 && _iterator9.return != null) {\n          _iterator9.return();\n        }\n      } finally {\n        if (_didIteratorError9) {\n          throw _iteratorError9;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createVarEvent(\"childnoderemoved_deep\", function (target, args, callback) {\n  var config = {\n    childList: true,\n    subtree: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion10 = true;\n    var _didIteratorError10 = false;\n    var _iteratorError10 = undefined;\n\n    try {\n      for (var _iterator10 = mutationsList[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n        var mutation = _step10.value;\n\n        if (mutation.target == target && mutation.removedNodes.length > 0) {\n          mutation.removedNodes.forEach(function (node) {\n            if (node.nodeName.toUpperCase() == args[0].toUpperCase()) {\n              mutation.removedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError10 = true;\n      _iteratorError10 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion10 && _iterator10.return != null) {\n          _iterator10.return();\n        }\n      } finally {\n        if (_didIteratorError10) {\n          throw _iteratorError10;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createEvent(\"textnodeadded\", function (target, callback) {\n  var config = {\n    childList: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion11 = true;\n    var _didIteratorError11 = false;\n    var _iteratorError11 = undefined;\n\n    try {\n      for (var _iterator11 = mutationsList[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n        var mutation = _step11.value;\n\n        if (mutation.target == target && mutation.addedNodes.length > 0) {\n          mutation.addedNodes.forEach(function (node) {\n            if (node.constructor.name == \"Text\") {\n              mutation.addedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError11 = true;\n      _iteratorError11 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion11 && _iterator11.return != null) {\n          _iterator11.return();\n        }\n      } finally {\n        if (_didIteratorError11) {\n          throw _iteratorError11;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createEvent(\"textnoderemoved\", function (target, callback) {\n  var config = {\n    childList: true\n  };\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion12 = true;\n    var _didIteratorError12 = false;\n    var _iteratorError12 = undefined;\n\n    try {\n      for (var _iterator12 = mutationsList[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n        var mutation = _step12.value;\n\n        if (mutation.target == target && mutation.removedNodes.length > 0) {\n          mutation.removedNodes.forEach(function (node) {\n            if (node.constructor.name == \"Text\") {\n              mutation.removedNode = node;\n              callback(mutation);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      _didIteratorError12 = true;\n      _iteratorError12 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion12 && _iterator12.return != null) {\n          _iterator12.return();\n        }\n      } finally {\n        if (_didIteratorError12) {\n          throw _iteratorError12;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\n_eventxCore.default.createEvent(\"textnodechanged\", function (target, callback) {\n  var config = {\n    characterData: true,\n    characterDataOldValue: true,\n    childList: true,\n    subtree: true\n  };\n  console.log(\"aaa\");\n  var ob = new MutationObserver(function (mutationsList) {\n    var _iteratorNormalCompletion13 = true;\n    var _didIteratorError13 = false;\n    var _iteratorError13 = undefined;\n\n    try {\n      for (var _iterator13 = mutationsList[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n        var mutation = _step13.value;\n        //if (mutation.target == target) {\n        callback(mutation); //}\n      }\n    } catch (err) {\n      _didIteratorError13 = true;\n      _iteratorError13 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion13 && _iterator13.return != null) {\n          _iterator13.return();\n        }\n      } finally {\n        if (_didIteratorError13) {\n          throw _iteratorError13;\n        }\n      }\n    }\n  });\n  ob.observe(target, config);\n  return function () {\n    //ob.unobserve(target);\n    ob.disconnect();\n  };\n});\n\nvar _default = _eventxCore.default;\nexports.default = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/dom.js\n");

/***/ })

/******/ });