window["evx"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/jquery.js":
/*!***********************!*\
  !*** ./src/jquery.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _main = __webpack_require__(/*! ./main.js */ \"./src/main.js\");\n\nif (typeof JQuery !== 'undefined') $ = jQuery;\nvar $on, $off;\n\nif (typeof $ !== 'undefined') {\n  $on = $.prototype.on;\n  $off = $.prototype.off;\n\n  $.prototype.on = function (event, selector, data, handler) {\n    var _this = this;\n\n    //backup old variable\n    var $event = event;\n    var $selector = selector;\n    var $data = data;\n    var $handler = handler; //Rearrange order of arguments to correct order\n\n    if (selector && typeof selector === \"function\") {\n      handler = selector;\n      selector = null;\n      data = null;\n    }\n\n    if (data && typeof data === \"function\") {\n      handler = data;\n      data = null;\n    }\n\n    if (selector && typeof selector !== \"string\") {\n      data = selector;\n      selector = null;\n    } //event special case\n\n\n    if ($.isPlainObject(event)) {\n      $.each(events, function (e, h) {\n        $.prototype.on.call(_this, e, selector, data, h);\n      });\n      return;\n    } else if (typeof event === \"string\") {\n      var events = event.split(\" \");\n\n      if (events.length > 1) {\n        //console.log(event,selector,data,handler);\n        $.each(events, function (i, e) {\n          $.prototype.on.call(_this, e, selector, data, handler);\n        });\n        return;\n      }\n    } //console.log(event,selector,data,handler);\n\n\n    if (data) {\n      var oldhandler = handler;\n\n      handler = function handler(e) {\n        if (!e.data) e.data = data;\n        oldhandler(e);\n      };\n    }\n\n    if (this.length > 0 && this[0] != window\n    /* && this[0]!=document*/\n    ) {\n        //special case\n        (0, _main.on)(selector ? this.find(selector) : this, event, handler);\n      }\n\n    $on.call(this, $event, $selector, $data, $handler);\n  };\n\n  $.prototype.off = function (event, selector, handler) {\n    var _this2 = this;\n\n    //backup old variable\n    var $event = event;\n    var $selector = selector;\n    var $handler = handler; //Rearrange order of arguments to correct order\n\n    if (selector && typeof selector === \"function\") {\n      handler = selector;\n      selector = null;\n    } //event special case\n\n\n    if (!event) {\n      (0, _main.off)(selector ? this.find(selector) : this, event, handler);\n      $off.call(this, $event, $selector, $handler);\n      return;\n    }\n\n    if ($.isPlainObject(event)) {\n      $.each(events, function (e, h) {\n        $.prototype.off.call(_this2, e, selector, h);\n      });\n      return;\n    } else if (typeof event === \"string\") {\n      var events = event.split(\" \");\n\n      if (events.length > 1) {\n        //console.log(event,selector,data,handler);\n        $.each(events, function (i, e) {\n          $.prototype.off.call(_this2, e, selector, handler);\n        });\n        return;\n      }\n    }\n\n    if (this.length > 0 && this[0] != window\n    /* && this[0]!=document*/\n    ) {\n        //special case\n        (0, _main.off)(selector ? this.find(selector) : this, event, handler);\n      }\n\n    $off.call(this, $event, $selector, $handler);\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/jquery.js\n");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEvent = createEvent;\nexports.removeEvent = removeEvent;\nexports.renameEvent = renameEvent;\nexports.createVarEvent = createVarEvent;\nexports.renameVarEvent = renameVarEvent;\nexports.removeVarEvent = removeVarEvent;\nexports.on = on;\nexports.off = off;\nexports.default = exports.setting = exports.unbinds = void 0;\n//import $ from 'jquery';\nif (typeof JQuery !== 'undefined') $ = jQuery;\nvar events = {};\nvar varevents = {};\nvar unbinds = {};\nexports.unbinds = unbinds;\nvar setting = {}\n/*    resizeObserverFirstRun : true,\r\n    cssObserveEqualChange : false*/\n\n/**\r\n * Create driver for a single event (If add to exisitng event type it will stack)\r\n * @param {string} name name of event\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that takes target element (native HTMLElement) and callback and return unbind function (no argument) that unbind event that has been binded using bind function\r\n */\n;\nexports.setting = setting;\n\nfunction createEvent(name, bind) {\n  if (!events[name]) events[name] = [];\n  events[name].push(bind);\n}\n/**\r\n * Remove event driver created by createEvent function only (This function don't unbind events that has already binded)\r\n * @param {string} name name of event\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that was used to pass into createEvent function (optional)\r\n */\n\n\nfunction removeEvent(name, bind) {\n  if (events[name]) {\n    if (!bind) {\n      events[name] = null;\n    } else {\n      for (var i = 0; i < events[name].length; i++) {\n        if (events[name][i] == bind) {\n          events[name].splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction renameEvent(name, newname) {\n  events[newname] = events[name];\n  events[name] = null;\n}\n/**\r\n * Create driver for events that start with \"<prefix>:\" (If add to exisitng event type it will stack)\r\n * @param {string} prefix prefix of event (Ex: prefix=csschange will match \"csschange:...\" event)\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that takes target element (native HTMLElement) and callback and return unbind function (no argument) that unbind event that has been binded using bind function\r\n */\n\n\nfunction createVarEvent(prefix, bind) {\n  if (!varevents[prefix]) varevents[prefix] = [];\n  varevents[prefix].push(bind);\n}\n\nfunction renameVarEvent(name, newname) {\n  varevents[newname] = varevents[name];\n  varevents[name] = null;\n}\n/**\r\n * Remove event driver created by createVarEvent function only (This function don't unbind events that has already binded)\r\n * @param {string} prefix prefix of event\r\n * @param {(target:Element,callback:(e)=>boolean)=>()=>void} bind Bind function that was used to pass into createEvent function (optional)\r\n */\n\n\nfunction removeVarEvent(prefix, bind) {\n  if (varevents[prefix]) {\n    if (!bind) {\n      varevents[prefix] = null;\n    } else {\n      for (var i = 0; i < varevents[prefix].length; i++) {\n        if (varevents[prefix][i] == bind) {\n          varevents[prefix].splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n}\n\nfunction on_single(target, name, callback) {\n  if (!(target instanceof HTMLElement)) throw \"target must be an instance of HTMLElement or JQuery\";\n\n  if (events[name]) {\n    events[name].forEach(function (event) {\n      if (!target.unbinds) target.unbinds = {};\n      if (!target.unbinds[name]) target.unbinds[name] = {};\n      if (!target.unbinds[name][callback]) target.unbinds[name][callback] = [];\n      target.unbinds[name][callback].push(event(target, callback.bind(target)));\n    });\n  }\n}\n\nfunction on_single_var(target, name, args, callback) {\n  if (varevents[name]) {\n    varevents[name].forEach(function (event) {\n      if (!target.varunbinds) target.varunbinds = {};\n      if (!target.varunbinds[name]) target.varunbinds[name] = {};\n      if (!target.varunbinds[name][args]) target.varunbinds[name][args] = {};\n      if (!target.varunbinds[name][args][callback]) target.varunbinds[name][args][callback] = [];\n      target.varunbinds[name][args][callback].push(event(target, args, callback.bind(target)));\n    });\n  }\n}\n\nfunction on(target, name, callback) {\n  var part = name.split(\":\");\n\n  if (typeof $ !== 'undefined') {\n    $(target).each(function (index, ele) {\n      on_single(ele, name, callback);\n    });\n  } else {\n    on_single(target, name, callback);\n  } //Variable event\n\n\n  if (part.length > 1) {\n    var firstpart = part[0];\n    part.shift();\n\n    if (typeof $ !== 'undefined') {\n      $(target).each(function (index, ele) {\n        on_single_var(ele, firstpart, part, callback);\n      });\n    } else {\n      on_single_var(target, firstpart, part, callback);\n    }\n  }\n}\n\nfunction off_single(target, name, callback) {\n  if (!name) {\n    if (target.unbinds) {\n      for (var unbind_ in target.unbinds) {\n        off_single(target, unbind_);\n      }\n\n      target.unbinds = null;\n    }\n\n    return;\n  }\n\n  if (!callback) {\n    if (target.unbinds && target.unbinds[name]) {\n      for (var unbind_ in target.unbinds[name]) {\n        off_single(target, name, unbind_);\n      }\n\n      target.unbinds[name] = null;\n    }\n\n    return;\n  }\n\n  if (target.unbinds && target.unbinds[name] && target.unbinds[name][callback]) {\n    target.unbinds[name][callback].forEach(function (unbind) {\n      unbind();\n    });\n    target.unbinds[name][callback] = null;\n  }\n}\n\nfunction off_single_var(target, name, args, callback) {\n  if (!name) {\n    if (target.varunbinds) {\n      for (var unbind_ in target.varunbinds) {\n        off_single_var(target, unbind_);\n      }\n\n      target.varunbinds = null;\n    }\n\n    return;\n  }\n\n  if (!args) {\n    if (target.varunbinds && target.varunbinds[name]) {\n      for (var unbind_ in target.varunbinds[name]) {\n        off_single_var(target, name, unbind_);\n      }\n\n      target.varunbinds[name] = null;\n    }\n\n    return;\n  }\n\n  if (!callback) {\n    if (target.varunbinds && target.varunbinds[name] && target.varunbinds[name][args]) {\n      for (var unbind_ in target.varunbinds[name][args]) {\n        off_single_var(target, name, args, unbind_);\n      }\n\n      target.varunbinds[name][args] = null;\n    }\n\n    return;\n  }\n\n  if (target.varunbinds && target.varunbinds[name] && target.varunbinds[name][args] && target.varunbinds[name][args][callback]) {\n    target.varunbinds[name][args][callback].forEach(function (unbind) {\n      unbind();\n    });\n    target.varunbinds[name][args][callback] = null;\n  }\n}\n\nfunction off(target, name, callback) {\n  var part = name.split(\":\");\n\n  if (typeof $ !== 'undefined') {\n    $(target).each(function (index, ele) {\n      off_single(ele, name, callback);\n    });\n  } else {\n    off_single(target, name, callback);\n  } //Variable event\n\n\n  if (part.length > 1) {\n    var firstpart = part[0];\n    part.shift();\n\n    if (typeof $ !== 'undefined') {\n      $(target).each(function (index, ele) {\n        off_single_var(ele, firstpart, part, callback);\n      });\n    } else {\n      off_single_var(target, firstpart, part, callback);\n    }\n  }\n}\n\nvar _default = {\n  createEvent: createEvent,\n  createVarEvent: createVarEvent,\n  removeEvent: removeEvent,\n  removeVarEvent: removeVarEvent,\n  renameEvent: renameEvent,\n  renameVarEvent: renameVarEvent,\n  on: on,\n  off: off,\n  setting: setting,\n  unbinds: unbinds\n};\nexports.default = _default;\n\n__webpack_require__(/*! ./jquery.js */ \"./src/jquery.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ })

/******/ });